SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[SEQUENCE_NEXT]
	@TABLE VARCHAR(100),
	@WHERE_FIELDS NVARCHAR(max) = NULL,
	@WHERE_VALUES SQL_VARIANT = NULL,
	@CUSTOM_WHERE NVARCHAR(max) = NULL,
	@SEQUENCE_FIELD NVARCHAR(max) = NULL,
	@DEBUG BIT = NULL,
	@SILENT BIT = 0
AS
BEGIN

	SET NOCOUNT ON
	
	IF (@SEQUENCE_FIELD IS NULL) SET @SEQUENCE_FIELD = 'SEQUENCE'
	IF (@DEBUG IS NULL) SET @DEBUG = CAST(0 AS BIT)

	DECLARE @FIELDS TABLE(ID INT, FIELD VARCHAR(1000))
	IF @WHERE_FIELDS IS NOT NULL AND @WHERE_FIELDS <>''
	BEGIN
		INSERT INTO @FIELDS
		SELECT * FROM DBO.StrList(@WHERE_FIELDS)
	END

	DECLARE @VALUES TABLE(ID INT, [VALUE] VARCHAR(1000))
	IF @WHERE_VALUES IS NOT NULL AND @WHERE_VALUES <>''
	BEGIN
		INSERT INTO @VALUES
		SELECT * FROM DBO.StrList(CONVERT(NVARCHAR(MAX), @WHERE_VALUES))
	END

	DECLARE @SQL NVARCHAR(MAX)
	DECLARE @WHERESQL NVARCHAR(MAX) = ''

	SET @SQL = 'SELECT @RETURNVALUE = '+CHAR(10)+CHAR(9)+'ISNULL(MAX('+ @SEQUENCE_FIELD +'), 0) + 1 '+CHAR(10)+'FROM '+@TABLE+' WITH (NOLOCK)'

	IF ((SELECT COUNT(*) FROM @FIELDS) > 0 AND (SELECT COUNT(*) FROM @VALUES) > 0 AND (SELECT COUNT(*) FROM @VALUES) = (SELECT COUNT(*) FROM @FIELDS)) OR @CUSTOM_WHERE IS NOT NULL
	BEGIN
		SET @WHERESQL = CHAR(10) + 'WHERE' + CHAR(10)

		IF (SELECT COUNT(*) FROM @FIELDS) > 0
		BEGIN
			SELECT @WHERESQL = @WHERESQL +  CASE WHEN ROW_NUMBER() OVER(ORDER BY f.id) >1 THEN 'AND ' ELSE CHAR(9) END + ' ' + FIELD +' = ' + v.VALUE + CHAR(10)
			FROM @FIELDS F
			LEFT JOIN @VALUES v ON v.ID = f.ID
		END
		
		IF @CUSTOM_WHERE IS NOT NULL
		BEGIN
			IF (SELECT COUNT(*) FROM @FIELDS) > 0
				SET @WHERESQL = @WHERESQL + 'AND'
			ELSE
				SET @WHERESQL = @WHERESQL + CHAR(9)

			SET @WHERESQL = @WHERESQL + ' '+ @CUSTOM_WHERE + CHAR(10)
			
		END
	END
	ELSE IF (SELECT COUNT(*) FROM @FIELDS) > 0 OR (SELECT COUNT(*) FROM @VALUES) > 0 OR (SELECT COUNT(*) FROM @VALUES) <> (SELECT COUNT(*) FROM @FIELDS)
	BEGIN
		RAISERROR('Onvolledige/Ongelijke wheres', 15,15)
		RETURN 'Error: Onvolledige/Ongelijke wheres'
	END
    
	SET @SQL = @SQL + @WHERESQL

	IF @SILENT = 0
	BEGIN
		SET @SQL = @SQL + 'SELECT @RETURNVALUE AS [SEQUENCE]'
	END

	PRINT @SQL
	IF @DEBUG = 0
	BEGIN
		--EXEC sp_executesql @SQL
		DECLARE @RETURNVALUE INT
		EXEC SP_EXECUTESQL 
			@Query  = @SQL
		  , @Params = N'@RETURNVALUE INT OUTPUT'
		  , @RETURNVALUE = @RETURNVALUE OUTPUT

		RETURN @RETURNVALUE
	END
	ELSE SELECT @SQL AS SQL
	
END


GO
